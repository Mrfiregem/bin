#!/usr/bin/env bash
tab=$'\t'
fzf_args=(
  "--delimiter=${tab}"
  '--with-nth=1,2'
  '--cycle'
  '--header=Flatpak Installer'
  '--preview=printf "%-8s: %s\n" package {1} app-id {3} version {4} branch {5} branch {6}'
  '--preview-label=Package Information'
  '--preview-window=top,5'
)

debug_echo() { [[ -z ${verbose:+'is_set'} ]] || printf ':: %s\n' "$1" >&2; }

help_msg() {
  cat <<EOF
usage: flatpak-search-install [-h] [-f | -r REMOTE] [QUERY]
Interactively install a flatpak with fzf.

Command-line Flags:
  -h --help  Show this message
  -f         Shorthand for '-r flathub'
  -r REMOTE  Filter only apps in REMOTE
EOF
}

declare -a query
declare remote

while [[ -n $1 ]]; do
  case "$1" in
  -h | --help)
    help_msg
    exit 0
    ;;
  -r)
    remotes=$(flatpak remotes | cut -f 1)
    if grep -q "$2" <<<"$remotes"; then
      remote=$2
    else
      printf '%s is not a valid remote.\n' "$2" >&2
      exit 1
    fi
    shift 2
    ;;
  -f)
    remote='flathub'
    shift
    ;;
  -v | --verbose)
    verbose=1
    shift
    ;;
  -*)
    printf 'Unknown flag: %s\n' "$1" >&2
    help_msg >&2
    exit 3
    ;;
  *)
    query+=("$1")
    shift
    ;;
  esac
done

# If no query provided from cli, ask for input
if [[ ${query[*]} == '' ]]; then
  read -rp 'Search: ' -a query
  debug_echo "query=(${query[*]})"
fi

# Perform the search with flatpak
debug_echo "Performing search"
if raw_search=$(flatpak search -- "${query[@]}"); then
  debug_echo "Search complete"
else
  echo 'Could not search flatpak.' >&2
  exit 2
fi

# Exit if search has no results
if [[ $raw_search == 'No matches found' ]]; then
  echo 'No matches found.' >&2
  exit 1
fi

# If a remote is given with '-r', filter for it
if [[ -n $remote ]]; then
  debug_echo "Filtering results by remote='${remote}'"

  raw_search=$(awk -F "$tab" '$6 == "'"${remote}"'" { print }' <<<"$raw_search")

  # Exit if search has no results after filter
  if [[ $raw_search == '' ]]; then
    echo 'No matches found.' >&2
    exit 1
  fi
fi

# Run fzf; output "${reponame}\n${app_id}//${pkgver}\n${pkgname}"; collect into $pkg_info array
mapfile -t pkg_info < <(fzf "${fzf_args[@]}" <<<"$raw_search" | awk -v 'FS=\t' -v 'OFS=\n' '{ print $6, $3 "//" $5, $1 }')

if [[ -z ${pkg_info[*]} ]]; then
  # User exited without picking anything
  echo 'No program selected.'
  exit 0
elif [[ -z ${pkg_info[2]} ]]; then
  # No pkgname means no pkg available
  # Should not be reachable
  echo 'No matches found.' >&2
  exit 1
fi

# Install the package
exec flatpak install -- "${pkg_info[0]}" "${pkg_info[1]}"
